#summary Opis architektury silnika Plague Engine.

= Słowem wstępu =

Plague Engine jest silnikiem tworzonym na potrzeby projektu gry o tytule roboczym _Zaraza - Taktyczne Wyzwanie_.

= Architektura =

== Opis ==

Architektura silnika jest oparta o system komponentów. Każdy podsystem niższego poziomu udostępnia komponenty z których budowane są obiekty gry. Każdy komponent reprezentuje wyspecjalizowaną funkcjonalność podsystemu z którego pochodzi. Logika korzystania z ich funkcjonalności jest zakodowana bezpośrednio w obiekcie gry. Zaleca się możliwie jak największe parametryzowanie klas obiektów gry, dzięki czemu będzie można tworzyć rodziny obiektów gry posiadających wspólne parametry (definicje obiektów gry). Sercem logiki gry jest system zdarzeń, umożliwiający komunikację obiektów gry ze sobą. 

|| http://z1.przeklej.pl/prze2376/18f79e86001809524d808eab/gea2.png ||
|| diagram architektury silnika ||

== Systemy ==

=== Lista systemów ===

 * Podrzędne:
  * [Rendering]
  * [Audio]
  * [Physics]
  * [Resources]
  * [Time Control]
  * [GUI]
  * [Input]
  * [Events]
 * [LowLevelGameFlow]
 * [HighLevelGameFlow]

=== Realizacja ===

|| *Nazwa Systemu* || *Obecny stan* ||
|| Rendering       || <font color="orange">tylko podstawy</font> ||
|| Audio           || <font color="red">*brak*</font> ||
|| Physics         || <font color="red">*brak*</font> ||
|| Resources       || <font color="blue">w trakcie</font> ||
|| Time Control    || <font color="green">*Ukończony?*</font> ||
|| GUI             || <font color="red">*brak*</font> ||
|| Input           || <font color="orange">tylko podstawy</font> ||
|| Events          || <font color="red">*brak*</font> ||

== Zewnętrzne biblioteki/frameworki ==

 * [http://msdn.microsoft.com/en-us/library/bb200104.aspx XNA Game Studio 4.0]
 * [http://nuclexframework.codeplex.com/ Nuclex Framework]